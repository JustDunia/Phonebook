{"version":3,"file":"static/js/53.49a370e4.chunk.js","mappings":"sOAIA,GAAeA,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,+WACD,gB,oBCyCJ,EAxCa,WACX,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CACRC,UAAU,OACVC,SAAS,KACTC,GAAI,CACFC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,OAAQ,QACRC,SAAA,EAEFZ,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CACLP,GAAI,CAAEQ,GAAI,EAAGC,QAAS,iBAAkBC,MAAO,IAAKL,OAAQ,KAAMC,UAElEZ,EAAAA,EAAAA,KAACiB,EAAY,CAACX,GAAI,CAAEY,SAAU,SAEhClB,EAAAA,EAAAA,KAACmB,EAAAA,EAAU,CAACf,UAAU,KAAKgB,QAAQ,KAAIR,SAAC,0BAGxCZ,EAAAA,EAAAA,KAACmB,EAAAA,EAAU,CAACf,UAAU,KAAKgB,QAAQ,KAAIR,SAAC,yCAGxCV,EAAAA,EAAAA,MAACmB,EAAAA,EAAG,CAACf,GAAI,CAAEgB,GAAI,GAAIV,SAAA,EACjBZ,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,CAACC,KAAK,SAASC,KAAK,SAASL,QAAQ,YAAYd,GAAI,CAAEgB,GAAI,GAAIV,SAAC,aAGvEZ,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,CACLC,KAAK,YACLC,KAAK,SACLL,QAAQ,YACRd,GAAI,CAAEgB,GAAI,EAAGI,GAAI,GAAId,SACtB,iBAMT,C,kECvCMT,GAAYwB,EAAAA,EAAAA,GAAgB,CAChCC,uBAAuBC,EAAAA,EAAAA,IAAO,MAAO,CACnCC,KAAM,eACNC,KAAM,OACNC,kBAAmB,SAACC,EAAOC,GACzB,IACEC,EACEF,EADFE,WAEF,MAAO,CAACD,EAAOE,KAAMF,EAAO,WAADG,QAAYC,EAAAA,EAAAA,GAAWC,OAAOJ,EAAW9B,aAAe8B,EAAWK,OAASN,EAAOM,MAAOL,EAAWM,gBAAkBP,EAAOO,eAC3J,IAEFC,cAAe,SAAAC,GAAO,OAAID,EAAAA,EAAAA,GAAc,CACtCT,MAAOU,EACPb,KAAM,gBACN,IA6CJ,K","sources":["../node_modules/@mui/icons-material/esm/ContactPhone.js","pages/Home.js","../node_modules/@mui/material/Container/Container.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M22 3H2C.9 3 0 3.9 0 5v14c0 1.1.9 2 2 2h20c1.1 0 1.99-.9 1.99-2L24 5c0-1.1-.9-2-2-2zM8 6c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm6 12H2v-1c0-2 4-3.1 6-3.1s6 1.1 6 3.1v1zm3.85-4h1.64L21 16l-1.99 1.99c-1.31-.98-2.28-2.38-2.73-3.99-.18-.64-.28-1.31-.28-2s.1-1.36.28-2c.45-1.62 1.42-3.01 2.73-3.99L21 8l-1.51 2h-1.64c-.22.63-.35 1.3-.35 2s.13 1.37.35 2z\"\n}), 'ContactPhone');","import { Typography } from '@mui/material';\nimport { Container } from '@mui/material';\nimport { Button } from '@mui/material';\nimport { ContactPhone } from '@mui/icons-material';\nimport Avatar from '@mui/material/Avatar';\nimport { Box } from '@mui/material';\n\nconst Home = () => {\n  return (\n    <Container\n      component=\"main\"\n      maxWidth=\"md\"\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '50vh',\n      }}\n    >\n      <Avatar\n        sx={{ mb: 5, bgcolor: 'secondary.main', width: 100, height: 100 }}\n      >\n        <ContactPhone sx={{ fontSize: 50 }} />\n      </Avatar>\n      <Typography component=\"h2\" variant=\"h4\">\n        Welcome to PhoneBook\n      </Typography>\n      <Typography component=\"h3\" variant=\"h5\">\n        Please Sign in or register new user\n      </Typography>\n      <Box sx={{ mt: 5 }}>\n        <Button href=\"/login\" type=\"button\" variant=\"contained\" sx={{ mt: 3 }}>\n          Sign In\n        </Button>\n        <Button\n          href=\"/register\"\n          type=\"button\"\n          variant=\"contained\"\n          sx={{ mt: 3, ml: 1 }}\n        >\n          Sign Up\n        </Button>\n      </Box>\n    </Container>\n  );\n};\nexport default Home;\n","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"],"names":["createSvgIcon","_jsx","d","_jsxs","Container","component","maxWidth","sx","display","flexDirection","alignItems","justifyContent","height","children","Avatar","mb","bgcolor","width","ContactPhone","fontSize","Typography","variant","Box","mt","Button","href","type","ml","createContainer","createStyledComponent","styled","name","slot","overridesResolver","props","styles","ownerState","root","concat","capitalize","String","fixed","disableGutters","useThemeProps","inProps"],"sourceRoot":""}